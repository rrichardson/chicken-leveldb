;;; ---------------------------------------------------------------------
;;; Copyright (c) 2012, Rick Richardson
;;; All rights reserved.
;;; 
;;; Redistribution and use in source and binary forms, with or without 
;;; modification, are permitted provided that the following conditions are met:
;;; 
;;; Redistributions of source code must retain the above copyright notice, 
;;; this list of conditions and the following disclaimer.
;;; Redistributions in binary form must reproduce the above copyright notice, 
;;; this list of conditions and the following disclaimer in the documentation 
;;; and/or other materials provided with the distribution.
;;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
;;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
;;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
;;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
;;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
;;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

;;; ---------------------------------------------------------------------
;;;
;;; Dependency check
;;;
;;; First, we'll do a basic check to make sure that libproccpuinfo
;;; is installed somewhere chicken-install can find it.  If it can't
;;; be found, we'll give the user and informative error message.
;;; We'll need the following module, for the header-search procedure,
;;; which respects CFLAGS:

;;; A list of foreign headers that need to be searched for:
(define required-headers '("leveldb_c.h"))

;;; Try to find all the required headers, exiting with an error
;;; and a helpful message if any of them aren't found.
(header-search required-headers)

;;; Unfortunately, we can't rely on the built-in (find-library ...)
;;; routine to search for "libproccpuinfo.so", since find-library
;;; does not respect LDFLAGS.  And it's a real pain to write a
;;; replacement.  So we'll just assume it's installed and go on
;;; with the rest of the egg's compile and build cycle.
;;;
;;; If it's not installed, the compile will fail with an error anyway,
;;; though the error will be a lot uglier than the "header-search"
;;; procedure generates in case a required header is missing.

;;;
;;; End of dependency check
;;;
;;; ---------------------------------------------------------------------

;;; ---------------------------------------------------------------------
;;;
;;; Compilation
;;;
;;; All the magic of compilation takes place in the Makefile

(print "; starting compilation ...")

;;; If make fails, (run ...) will spit out an ugly exception.  Rather
;;; than allowing an unhandled exception to spit out an ugly and mostly
;;; useless error message, we'll capture the exception and simply exit.
;;; The errors generated by make itself should be enough to debug
;;; what went wrong.
(handle-exceptions _
  (exit 1)
  (run (make)))

;;;
;;; End of compilation
;;;
;;; ---------------------------------------------------------------------


;;; ---------------------------------------------------------------------
;;;
;;; Installation

(install-extension
  ; Name of your extension:
  'leveldb
  ; Files to install for your extension:
  '("leveldb.o" "leveldb.so" "leveldb.import.so")
  ; Assoc list with properties for your extension:
  '((version 0.1)
    (static "leveldb.o"))) ;; for static linking

;;;
;;; End of installation
;;;
;;; ---------------------------------------------------------------------
